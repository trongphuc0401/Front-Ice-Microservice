
# Server configuration
server.port=8080

# Application name
spring.application.name=gateway

# PostgreSQL configuration
spring.datasource.url=jdbc:postgresql://maglev.proxy.rlwy.net:46766/railway
spring.datasource.username=postgres
spring.datasource.password=TeKQQnqNCUapmnepGdxUeekhIUpFQOXy

spring.datasource.driver-class-name=org.postgresql.Driver

#Color Console
spring.output.ansi.enabled=always

#JPA/Hibernate (optional)
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=true


# Eureka client configuration
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
eureka.instance.prefer-ip-address=true

# Spring Cloud Gateway Routes
spring.cloud.gateway.routes[0].id=auth-service
spring.cloud.gateway.routes[0].uri=lb://auth-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**

spring.cloud.gateway.routes[1].id=challenge-service
spring.cloud.gateway.routes[1].uri=lb://challenge-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/challenge/**

spring.cloud.gateway.routes[2].id=challenger-service
spring.cloud.gateway.routes[2].uri=lb://challenger-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/challenger/**

# Timeout settings
spring.cloud.gateway.httpclient.connect-timeout=5000
spring.cloud.gateway.httpclient.response-timeout=5000

# CORS Configuration
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*

# Config Optimize Memory
server.tomcat.max-threads:50
server.tomcat.min-spare-threads:5